{"version":3,"file":"component---node-modules-smooth-doc-src-templates-post-js-content-file-path-c-users-ivangsa-workspace-zenwave-zen-wave-360-github-io-website-pages-posts-zen-wave-zdl-as-idl-for-open-api-md-08b71c09556d72c9cbe0.js","mappings":"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","sources":["webpack://website/./pages/posts/ZenWave_ZDL_As_IDL_for_OpenAPI.md","webpack://website/../node_modules/smooth-doc/src/templates/post.js?5277"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    blockquote: \"blockquote\",\n    p: \"p\",\n    a: \"a\",\n    h1: \"h1\",\n    div: \"div\",\n    code: \"code\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    pre: \"pre\",\n    img: \"img\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"This article was first published @medium: \", React.createElement(_components.a, {\n    href: \"https://medium.com/@ivangsa/stop-writing-yaml-for-openapi-use-a-compact-dsl-and-save-time-and-typing-574a138faddc\"\n  }, \"Stop writing YAML for OpenAPI, use a compact DSL and save time and typing\"), \".\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, {\n    id: \"generating-openapi-definition-files-from-zenwave-domain-language-models-with-zenwavesdk\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#generating-openapi-definition-files-from-zenwave-domain-language-models-with-zenwavesdk\",\n    \"aria-label\": \"generating openapi definition files from zenwave domain language models with zenwavesdk permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Generating OpenAPI definition files from \\\"ZenWave Domain Language\\\" models with ZenWaveSDK\"), \"\\n\", React.createElement(_components.p, null, \"Because writing YAML by hand is now fun...\"), \"\\n\", React.createElement(_components.p, null, \"You can use \", React.createElement(_components.code, null, \"ZenWave Domain Language\"), \" models as IDL to generate OpenAPI v3 with ZenWave SDK.\"), \"\\n\", React.createElement(_components.p, null, \"Imagine being able to quickly define an API in a more concise and readable way, without losing the rigor of an OpenAPI specification. This article explores how you can leverage \", React.createElement(_components.a, {\n    href: \"https://www.zenwave360.io/docs/event-driven-design/zenwave-domain-language\"\n  }, \"ZenWave Domain Language (ZDL)\"), \", a compact developer-friendly DSL, to generate OpenAPI definitions, simplifying the process of creating API documentation, reducing errors, and improving developer productivity. Whether you're managing an extensive API or just getting started, a DSL might be the key to making your API workflow more efficient.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"zenwave-domain-language-zdl\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#zenwave-domain-language-zdl\",\n    \"aria-label\": \"zenwave domain language zdl permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"ZenWave Domain Language (ZDL)\"), \"\\n\", React.createElement(_components.p, null, \"Inspired by JHipster JDL, ZDL is a language for describing DDD Bounded Contexts, including domain entities and their relationships, services, commands, events and business policies... for Event-Driven Architectures.\"), \"\\n\", React.createElement(_components.p, null, \"It's designed to be compact, readable and expressive. Developer friendly, and machine friendly. It works well as an Ubiquitous Language format.\"), \"\\n\", React.createElement(_components.p, null, \"It can also be used as an IDL for authoring OpenAPI (and AsyncAPI) definition files.\"), \"\\n\", React.createElement(\"img\", {\n    src: \"https://www.zenwave360.io/static/EventStorming-ZDL-Mapping-cb9c987d5d0aff110c5890481034ae20.png\"\n  }), \"\\n\", React.createElement(_components.h2, {\n    id: \"creating-a-zdl-for-authoring-an-openapi-definition\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#creating-a-zdl-for-authoring-an-openapi-definition\",\n    \"aria-label\": \"creating a zdl for authoring an openapi definition permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Creating a ZDL for authoring an OpenAPI definition\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"As a minimum requirement, you need a \", React.createElement(_components.code, null, \"service\"), \" and an \", React.createElement(_components.code, null, \"aggregate entity\"), \" for this service.\"), \"\\n\", React.createElement(_components.li, null, \"You can use this \", React.createElement(_components.code, null, \"entity\"), \" as request and response objects or you can define separate DTOs for this purpose using \", React.createElement(_components.code, null, \"input\"), \"and \", React.createElement(_components.code, null, \"output\"), \" entities.\"), \"\\n\", React.createElement(_components.li, null, \"You can also define and reference \", React.createElement(_components.code, null, \"enums\"), \" and \", React.createElement(_components.code, null, \"relationships\"), \" between entities. Nested entities and arrays also work.\"), \"\\n\", React.createElement(_components.li, null, \"Lastly you need to define the service methods and their parameters and annotate them using \", React.createElement(_components.code, null, \"@rest\"), \", \", React.createElement(_components.code, null, \"@post\"), \", \", React.createElement(_components.code, null, \"@get\"), \", \", React.createElement(_components.code, null, \"@put\"), \", \", React.createElement(_components.code, null, \"@delete\"), \", \", React.createElement(_components.code, null, \"@paginated\"), \", \", React.createElement(_components.code, null, \"@inline\"), \" annotations.\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-zdl\"\n  }, \"@aggregate\\r\\nentity PaymentMethod {\\r\\n    type PaymentMethodType required\\r\\n    cardNumber String required minlength(16) maxlength(16)\\r\\n}\\r\\n\\r\\nenum PaymentMethodType { VISA(1), MASTERCARD(2) }\\r\\n\\r\\n@rest(\\\"/payment-methods\\\")\\r\\nservice PaymentsService for (PaymentMethod) {\\r\\n    @post\\r\\n    doSomethingWithANewPayment(PaymentMethod) PaymentMethod\\r\\n\\r\\n    @put(\\\"/{id}\\\")\\r\\n    doSomethingWithAnExistingPayment(id, PaymentMethod) PaymentMethod?\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"NOTE: service method only accept two kind of parameters: \", React.createElement(_components.code, null, \"id\"), \" and command payload (that will map to the request body), but you can use \", React.createElement(_components.code, null, \"@inline\"), \" to expand fields as request path parameters (see below).\"), \"\\n\", React.createElement(_components.p, null, \"Checkout the \", React.createElement(_components.a, {\n    href: \"https://www.zenwave360.io/docs/event-driven-design/zenwave-domain-language#services-and-commands\"\n  }, \"ZDL documentation\"), \" for more details about command methods.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"install-zenwave-sdk-using-jbang\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#install-zenwave-sdk-using-jbang\",\n    \"aria-label\": \"install zenwave sdk using jbang permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Install ZenWave SDK Using JBang\"), \"\\n\", React.createElement(_components.p, null, \"Install an evergreen self updating ZenWave SDK CLI using JBang:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"jbang alias add --fresh --name=zw release@zenwave360/zenwave-sdk\\n\")), \"\\n\", React.createElement(_components.p, null, \"Following these instructions for complete details about JBang and IntelliJ Editor: \", React.createElement(_components.a, {\n    href: \"https://www.zenwave360.io/docs/getting-started/\"\n  }, \"https://www.zenwave360.io/docs/getting-started/\")), \"\\n\", React.createElement(_components.p, null, \"Now you can use jbang zw to generate a complete OpenAPI definition file from your ZDL model.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"jbang zw -p ZDLToOpenAPIPlugin \\\\\\r\\nspecFile=model.zdl \\\\\\r\\nidType=integer \\\\\\r\\nidTypeFormat=int64 \\\\\\r\\ntargetFolder=. \\\\\\r\\ntargetFile=payments-openapi.yml\\n\")), \"\\n\", React.createElement(_components.p, null, \"Or use ZenWave ZDL Editor for IntelliJ configuring the generator plugin on top of your zdl file:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-zdl\"\n  }, \"config {\\r\\n    plugins {\\r\\n        /** Use ZenWave Editor for IntelliJ IDEA to run this */\\r\\n        ZDLToOpenAPIPlugin {\\r\\n            idType integer\\r\\n            idTypeFormat int64\\r\\n            targetFolder \\\".\\\"\\r\\n            targetFile \\\"openapi.yml\\\"\\r\\n        }\\r\\n    }\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.img, {\n    src: \"./RunWith-ZenWave-Editor-for-IntelliJ.png\",\n    alt: \"Run With ZenWave Editor for IntelliJ\"\n  })), \"\\n\", React.createElement(_components.p, null, \"Then, check the generated OpenAPI definition file payments-openapi.yml, and see for yourself how much typing you saved!\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"expanding-fields-as-request-path-parameters\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#expanding-fields-as-request-path-parameters\",\n    \"aria-label\": \"expanding fields as request path parameters permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Expanding fields as request path parameters\"), \"\\n\", React.createElement(_components.p, null, \"You can use \", React.createElement(_components.code, null, \"@inline\"), \" \", React.createElement(_components.code, null, \"ìnputs\"), \" to expand fields as request path parameters (and service method parameters).\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-zdl\"\n  }, \"@inline // expand fields as request parameters\\r\\ninput PaymentMethodInput {\\r\\n    cardNumber String\\r\\n    paymentMethod PaymentMethod\\r\\n}\\r\\n\\r\\n@rest(\\\"/customers\\\")\\r\\nservice PaymentsService for (PaymentMethod) {\\r\\n\\r\\n    @put(\\\"/{paymentMethodId}/cardNumber/{cardNumber}\\\") // see example below to specify param types\\r\\n    updatePaymentMethodByCardNumber(PaymentMethodInput) PaymentMethod?\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"It will pick the first parameter from the entity id and the remaining parameters will be configured as \", React.createElement(_components.code, null, \"string\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.img, {\n    src: \"./InlinePathParameters-OpenAPI-Generated.png\",\n    alt: \"Inline Path Parameters OpenAPI Generated\"\n  })), \"\\n\", React.createElement(_components.p, null, \"But you can override the path params with configuration, see complete example below.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"complete-zdl-example\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#complete-zdl-example\",\n    \"aria-label\": \"complete zdl example permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Complete ZDL Example\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-zdl\"\n  }, \"@aggregate\\r\\nentity Customer {\\r\\n    name String required maxlength(254) /** Customer name */\\r\\n    email String required maxlength(254) pattern(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,4}$/)\\r\\n    /** Customer Addresses can be stored in a JSON column in the database. */\\r\\n    @json addresses Address[] minlength(1) maxlength(5) {\\r\\n        street String required maxlength(254)\\r\\n        city String required maxlength(254)\\r\\n    }\\r\\n}\\r\\n\\r\\nentity PaymentMethod {\\r\\n    type PaymentMethodType required\\r\\n    cardNumber String required\\r\\n}\\r\\n\\r\\nenum PaymentMethodType { VISA(1), MASTERCARD(2) }\\r\\n\\r\\nrelationship OneToMany {\\r\\n    Customer{paymentMethods required maxlength(3)} to PaymentMethod{customer required}\\r\\n}\\r\\n\\r\\n// you can create 'inputs' as dtos for your service methods, or use entities directly\\r\\ninput CustomerSearchCriteria {\\r\\n    name String\\r\\n    email String\\r\\n    city String\\r\\n    state String\\r\\n}\\r\\n\\r\\n@inline // expand fields as request parameters (and service method parameters)\\r\\ninput AddressInput {\\r\\n    addressId String\\r\\n    address Address\\r\\n}\\r\\n\\r\\n@rest(\\\"/customers\\\")\\r\\nservice CustomerService for (Customer) {\\r\\n    @post\\r\\n    createCustomer(Customer) Customer\\r\\n    @get(\\\"/{id}\\\")\\r\\n    getCustomer(id) Customer?\\r\\n    @put(\\\"/{id}\\\")\\r\\n    updateCustomer(id, Customer) Customer?\\r\\n    @put({ path: \\\"/{customerId}/address/{addressId}\\\", params: {addressId: Long} }) // specify param types\\r\\n    updateCustomerAddress(id, AddressInput) Customer?\\r\\n    @delete(\\\"/{id}\\\")\\r\\n    deleteCustomer(id)\\r\\n    @post(\\\"/search\\\")\\r\\n    @paginated\\r\\n    searchCustomers(CustomerSearchCriteria) Customer[]\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"Run:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"jbang zw -p io.zenwave360.sdk.plugins.ZDLToOpenAPIPlugin \\\\\\r\\n    specFile=customers-model.zdl \\\\\\r\\n    idType=integer \\\\\\r\\n    idTypeFormat=int64 \\\\\\r\\n    targetFolder=. \\\\\\r\\n    targetFile=openapi.yml\\n\")), \"\\n\", React.createElement(_components.p, null, \"And get surprised by the amount of YAML typing you saved!\"), \"\\n\", React.createElement(_components.p, null, \"Happy coding! 🚀\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"C:/Users/ivangsa/workspace/zenwave/ZenWave360.github.io/website/pages/posts/ZenWave_ZDL_As_IDL_for_OpenAPI.md\";\nconst postQuery = \"1367246537\";\n\nfunction PostTemplate(_ref) {\n  let {\n    children\n  } = _ref;\n  return children;\n}\n\nPostTemplate;\nexport default function GatsbyMDXWrapper(props) {\n  return /*#__PURE__*/React.createElement(PostTemplate, props, /*#__PURE__*/React.createElement(GATSBY_COMPILED_MDX, props));\n}"],"names":["_createMdxContent","props","_components","Object","assign","blockquote","p","a","h1","div","code","h2","ul","li","pre","img","_provideComponents","components","React","href","id","style","position","className","dangerouslySetInnerHTML","__html","src","alt","wrapper","MDXLayout","PostTemplate","_ref","children","GatsbyMDXWrapper"],"sourceRoot":""}