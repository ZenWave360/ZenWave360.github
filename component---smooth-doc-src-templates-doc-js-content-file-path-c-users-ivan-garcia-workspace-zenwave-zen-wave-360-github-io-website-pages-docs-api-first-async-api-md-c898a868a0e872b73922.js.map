{"version":3,"file":"component---smooth-doc-src-templates-doc-js-content-file-path-c-users-ivan-garcia-workspace-zenwave-zen-wave-360-github-io-website-pages-docs-api-first-async-api-md-c898a868a0e872b73922.js","mappings":"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","sources":["webpack://website/./pages/docs/API-First/AsyncAPI.md","webpack://website/../smooth-doc/src/templates/doc.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    a: \"a\",\n    div: \"div\",\n    p: \"p\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, {\n    id: \"api-first-with-asyncapi\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#api-first-with-asyncapi\",\n    \"aria-label\": \"api first with asyncapi permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"API-First with AsyncAPI\"), \"\\n\", React.createElement(_components.p, null, \"With ZenWave's \", React.createElement(_components.code, null, \"spring-cloud-streams3\"), \" and \", React.createElement(_components.code, null, \"jsonschema2pojo\"), \" sdk plugins you can generate:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Strongly typed \", React.createElement(_components.strong, null, \"business interfaces\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Payload DTOs\"), \" and\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Header objects\"), \" from AsyncAPI definitions.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"It uses Spring Cloud Streams, so it can connect to different brokers via provided binders.\"), \"\\n\", React.createElement(_components.p, null, \"And because everything is hidden behind interfaces we can encapsulate many Enterprise Integration Patterns.\"), \"\\n\", React.createElement(_components.p, null, \"If you are already doing API-First with OpenAPI, with ZenWave360 you can generate:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://zenwave360.github.io/zenwave-sdk/plugins/asyncapi-jsonschema2pojo/\"\n  }, \"AsyncAPI JsonSchema2Pojo\"), \" sdk plugin uses \", React.createElement(_components.a, {\n    href: \"https://www.jsonschema2pojo.org/\"\n  }, \"JsonSchema2Pojo\"), \" library supporting all upstream options\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://zenwave360.github.io/zenwave-sdk/plugins/asyncapi-spring-cloud-streams3/\"\n  }, \"Spring Cloud Streams implementation\"), \" for those business interfaces, for producing and consuming messages to any broker supported by Spring Cloud Streams.\"), \"\\n\", React.createElement(_components.li, null, \"Generates different \", React.createElement(_components.a, {\n    href: \"Event-Driven-Architectures/Enterprise-Integration-Patterns/\"\n  }, \"Enterprise Integration Patterns\"), \" behind those business interfaces:\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Transactional Outbox: with MongoDB ChangeStreams, Plain SQL and Debezium SQL\"), \"\\n\", React.createElement(_components.li, null, \"Route different Business non-retrayable Exceptions to DeadLetter Queues\"), \"\\n\", React.createElement(_components.li, null, \"Enterprise Envelope\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"Generates In-Memory Test-Doubles for your message producers.\"), \"\\n\", React.createElement(_components.li, null, \"Reverse Engineering JDL Models from AsyncAPI schemas\"), \"\\n\", React.createElement(_components.li, null, \"Generate \", React.createElement(_components.a, {\n    href: \"https://zenwave360.github.io/zenwave-sdk/plugins/jdl-to-asyncapi/\"\n  }, \"AsyncAPI definitions from JDL Models\"), \", for both json-schema or avro.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Â \"), \"\\n\", React.createElement(\"iframe\", {\n    width: \"1050\",\n    height: \"591\",\n    src: \"https://www.youtube.com/embed/gUsoD8RaCuw?si=KLGLktrNQqjxodg2\",\n    title: \"Code Generation For Enterprise Integration Patterns w/ AsyncAPI & ZenWave SDK - Ivan Garcia Sain-Aja\",\n    frameborder: \"0\",\n    allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen\",\n    allowfullscreen: true\n  }));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"C:/Users/ivan.garcia/workspace/zenwave/ZenWave360.github.io/website/pages/docs/API-First/AsyncAPI.md\";\nimport {graphql} from 'gatsby';\nexport const pageQuery = graphql`\n  query DocPageQuery($id: String!) {\n    mdx(id: { eq: $id }) {\n      fields {\n        pageType\n        title\n      }\n      tableOfContents\n    }\n  }\n`;\nfunction DocTemplate({children}) {\n  return children;\n}\nDocTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(DocTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","a","div","p","code","ul","li","strong","_provideComponents","components","React","id","style","position","href","className","dangerouslySetInnerHTML","__html","width","height","src","title","frameborder","allow","allowfullscreen","wrapper","MDXLayout","DocTemplate","children","_ref","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}